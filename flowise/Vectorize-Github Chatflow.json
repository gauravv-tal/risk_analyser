{
  "nodes": [
    {
      "id": "github_0",
      "position": {
        "x": 378.9737762972687,
        "y": 114.06593132433869
      },
      "type": "customNode",
      "data": {
        "id": "github_0",
        "label": "Github",
        "version": 3,
        "name": "github",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from a GitHub repository",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "description": "Only needed when accessing private repo",
            "optional": true,
            "credentialNames": [
              "githubApi"
            ],
            "id": "github_0-input-credential-credential",
            "display": true
          },
          {
            "label": "Repo Link",
            "name": "repoLink",
            "type": "string",
            "placeholder": "https://github.com/FlowiseAI/Flowise",
            "id": "github_0-input-repoLink-string",
            "display": true
          },
          {
            "label": "Branch",
            "name": "branch",
            "type": "string",
            "default": "main",
            "id": "github_0-input-branch-string",
            "display": true
          },
          {
            "label": "Recursive",
            "name": "recursive",
            "type": "boolean",
            "optional": true,
            "id": "github_0-input-recursive-boolean",
            "display": true
          },
          {
            "label": "Max Concurrency",
            "name": "maxConcurrency",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-maxConcurrency-number",
            "display": true
          },
          {
            "label": "Github Base URL",
            "name": "githubBaseUrl",
            "type": "string",
            "placeholder": "https://git.example.com",
            "description": "Custom Github Base Url (e.g. Enterprise)",
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-githubBaseUrl-string",
            "display": true
          },
          {
            "label": "Github Instance API",
            "name": "githubInstanceApi",
            "type": "string",
            "placeholder": "https://api.github.com",
            "description": "Custom Github API Url (e.g. Enterprise)",
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-githubInstanceApi-string",
            "display": true
          },
          {
            "label": "Ignore Paths",
            "name": "ignorePath",
            "description": "An array of paths to be ignored",
            "placeholder": "[\"*.md\"]",
            "type": "string",
            "rows": 4,
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-ignorePath-string",
            "display": true
          },
          {
            "label": "Max Retries",
            "name": "maxRetries",
            "description": "The maximum number of retries that can be made for a single call, with an exponential backoff between each attempt. Defaults to 2.",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-maxRetries-number",
            "display": true
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-metadata-json",
            "display": true
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "github_0-input-omitMetadataKeys-string",
            "display": true
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "github_0-input-textSplitter-TextSplitter",
            "display": true
          }
        ],
        "inputs": {
          "repoLink": "https://github.com/SayaliTal/calorie-tracker",
          "branch": "main",
          "recursive": true,
          "maxConcurrency": "",
          "githubBaseUrl": "",
          "githubInstanceApi": "",
          "ignorePath": "",
          "maxRetries": "",
          "textSplitter": "{{recursiveCharacterTextSplitter_0.data.instance}}",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "Array of document objects containing metadata and pageContent",
            "options": [
              {
                "id": "github_0-output-document-Document|json",
                "name": "document",
                "label": "Document",
                "description": "Array of document objects containing metadata and pageContent",
                "type": "Document | json"
              },
              {
                "id": "github_0-output-text-string|json",
                "name": "text",
                "label": "Text",
                "description": "Concatenated string from pageContent of documents",
                "type": "string | json"
              }
            ],
            "default": "document"
          }
        ],
        "outputs": {
          "output": "document"
        },
        "selected": false
      },
      "width": 300,
      "height": 706,
      "selected": false,
      "positionAbsolute": {
        "x": 378.9737762972687,
        "y": 114.06593132433869
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_0",
      "position": {
        "x": -4.292595473085271,
        "y": 115.4300841390313
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_0",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkSize-number",
            "display": true
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkOverlap-number",
            "display": true
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-separators-string",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": 1000,
          "chunkOverlap": 200,
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 436,
      "selected": false,
      "positionAbsolute": {
        "x": -4.292595473085271,
        "y": 115.4300841390313
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_0",
      "position": {
        "x": 789.0485178954514,
        "y": 109.51244030286364
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_0",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_0-input-credential-credential",
            "display": true
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_0-input-modelName-asyncOptions",
            "display": true
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-stripNewLines-boolean",
            "display": true
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-batchSize-number",
            "display": true
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-timeout-number",
            "display": true
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-basepath-string",
            "display": true
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-dimensions-number",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 430,
      "selected": false,
      "positionAbsolute": {
        "x": 789.0485178954514,
        "y": 109.51244030286364
      },
      "dragging": false
    },
    {
      "id": "mongoDBAtlas_0",
      "position": {
        "x": 1195.567441466311,
        "y": 111.05819536459026
      },
      "type": "customNode",
      "data": {
        "id": "mongoDBAtlas_0",
        "label": "MongoDB Atlas",
        "version": 1,
        "name": "mongoDBAtlas",
        "type": "MongoDB Atlas",
        "baseClasses": [
          "MongoDB Atlas",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "Upsert embedded data and perform similarity or mmr search upon query using MongoDB Atlas, a managed cloud mongodb database",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "mongoDBUrlApi"
            ],
            "id": "mongoDBAtlas_0-input-credential-credential",
            "display": true
          },
          {
            "label": "Database",
            "name": "databaseName",
            "placeholder": "<DB_NAME>",
            "type": "string",
            "id": "mongoDBAtlas_0-input-databaseName-string",
            "display": true
          },
          {
            "label": "Collection Name",
            "name": "collectionName",
            "placeholder": "<COLLECTION_NAME>",
            "type": "string",
            "id": "mongoDBAtlas_0-input-collectionName-string",
            "display": true
          },
          {
            "label": "Index Name",
            "name": "indexName",
            "placeholder": "<VECTOR_INDEX_NAME>",
            "type": "string",
            "id": "mongoDBAtlas_0-input-indexName-string",
            "display": true
          },
          {
            "label": "Content Field",
            "name": "textKey",
            "description": "Name of the field (column) that contains the actual content",
            "type": "string",
            "default": "text",
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-textKey-string",
            "display": true
          },
          {
            "label": "Embedded Field",
            "name": "embeddingKey",
            "description": "Name of the field (column) that contains the Embedding",
            "type": "string",
            "default": "embedding",
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-embeddingKey-string",
            "display": true
          },
          {
            "label": "Mongodb Metadata Filter",
            "name": "mongoMetadataFilter",
            "type": "json",
            "optional": true,
            "additionalParams": true,
            "id": "mongoDBAtlas_0-input-mongoMetadataFilter-json",
            "display": true
          },
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-topK-number",
            "display": true
          },
          {
            "label": "Search Type",
            "name": "searchType",
            "type": "options",
            "default": "similarity",
            "options": [
              {
                "label": "Similarity",
                "name": "similarity"
              },
              {
                "label": "Max Marginal Relevance",
                "name": "mmr"
              }
            ],
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-searchType-options",
            "display": true
          },
          {
            "label": "Fetch K (for MMR Search)",
            "name": "fetchK",
            "description": "Number of initial documents to fetch for MMR reranking. Default to 20. Used only when the search type is MMR",
            "placeholder": "20",
            "type": "number",
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-fetchK-number",
            "display": true
          },
          {
            "label": "Lambda (for MMR Search)",
            "name": "lambda",
            "description": "Number between 0 and 1 that determines the degree of diversity among the results, where 0 corresponds to maximum diversity and 1 to minimum diversity. Used only when the search type is MMR",
            "placeholder": "0.5",
            "type": "number",
            "additionalParams": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-lambda-number",
            "display": true
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "mongoDBAtlas_0-input-document-Document",
            "display": true
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "mongoDBAtlas_0-input-embeddings-Embeddings",
            "display": true
          }
        ],
        "inputs": {
          "document": [
            "{{github_0.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_0.data.instance}}",
          "databaseName": "repo_vector_db",
          "collectionName": "mongo_repo_vectors",
          "indexName": "code_embeddings_index",
          "textKey": "text",
          "embeddingKey": "embedding",
          "mongoMetadataFilter": "",
          "topK": "4",
          "searchType": "similarity",
          "fetchK": "",
          "lambda": ""
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "mongoDBAtlas_0-output-retriever-MongoDB Atlas|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "MongoDB Retriever",
                "description": "",
                "type": "MongoDB Atlas | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "mongoDBAtlas_0-output-vectorStore-MongoDB Atlas|VectorStore",
                "name": "vectorStore",
                "label": "MongoDB Vector Store",
                "description": "",
                "type": "MongoDB Atlas | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "vectorStore"
        },
        "selected": false
      },
      "width": 300,
      "height": 759,
      "selected": false,
      "positionAbsolute": {
        "x": 1195.567441466311,
        "y": 111.05819536459026
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "recursiveCharacterTextSplitter_0",
      "sourceHandle": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "github_0",
      "targetHandle": "github_0-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_0-recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-github_0-github_0-input-textSplitter-TextSplitter"
    },
    {
      "source": "openAIEmbeddings_0",
      "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "mongoDBAtlas_0",
      "targetHandle": "mongoDBAtlas_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-mongoDBAtlas_0-mongoDBAtlas_0-input-embeddings-Embeddings"
    },
    {
      "source": "github_0",
      "sourceHandle": "github_0-output-document-Document|json",
      "target": "mongoDBAtlas_0",
      "targetHandle": "mongoDBAtlas_0-input-document-Document",
      "type": "buttonedge",
      "id": "github_0-github_0-output-document-Document|json-mongoDBAtlas_0-mongoDBAtlas_0-input-document-Document"
    }
  ]
}